{"version":3,"sources":["../../src/repositories/order.repository.ts"],"sourcesContent":["import Order from '~/models/order.model';\r\nimport Product from '~/models/product.model';\r\nimport { OrderStatus } from '~/types/orderStatus';\r\nimport filterUndefinedOrNullFields from '~/utils/filterUndefineOrNull';\r\nimport { NotFoundException } from '~/utils/response';\r\n\r\nclass OrderRepository {\r\n   async getAllOrder({ page, limit, orderBy }) {\r\n      const filter = filterUndefinedOrNullFields({ orderBy });\r\n\r\n      if (!page) {\r\n         const result = await Order.find(filter)\r\n            ?.sort({ createdAt: -1 })\r\n            ?.populate({\r\n               path: 'orderBy'\r\n            })\r\n            ?.populate({\r\n               path: 'items.product',\r\n               populate: {\r\n                  path: 'images category'\r\n               }\r\n            });\r\n         return { result };\r\n      }\r\n\r\n      const result = await Order.find(filter)\r\n         .sort({ createdAt: -1 })\r\n         .populate({\r\n            path: 'orderBy'\r\n         })\r\n         .populate({\r\n            path: 'items.product',\r\n            populate: {\r\n               path: 'images category'\r\n            }\r\n         })\r\n         .skip((page - 1) * limit)\r\n         .limit(limit);\r\n\r\n      const totalItem = await Order.count(filter);\r\n\r\n      return {\r\n         result,\r\n         pagination: {\r\n            page: Number(page),\r\n            limit: Number(limit),\r\n            totalPage: Math.ceil(totalItem / limit)\r\n         }\r\n      };\r\n   }\r\n\r\n   async createOrder({ items, status, totalPrice, note, address, phone, orderBy }) {\r\n      const order = await Order.create(\r\n         filterUndefinedOrNullFields({ items, status, totalPrice, note, address, phone, orderBy })\r\n      );\r\n\r\n      const result = await Order.findById(order._id).populate('items.product');\r\n\r\n      return result;\r\n   }\r\n\r\n   async updateOrder({ _id, status }) {\r\n      const updatedOrder = await Order.findOneAndUpdate(\r\n         { _id },\r\n         filterUndefinedOrNullFields({ status }),\r\n         { new: true }\r\n      );\r\n\r\n      if (status === OrderStatus.PROCESSING) {\r\n         for (const item of updatedOrder.items) {\r\n            const product = await Product.findById(item.product);\r\n\r\n            if (product) {\r\n               const updatedQuantity = product.quantity - item.quantity;\r\n\r\n               await Product.findOneAndUpdate({ _id: item.product }, { quantity: updatedQuantity });\r\n            }\r\n         }\r\n      }\r\n\r\n      const result = await Order.findById(updatedOrder._id).populate('items.product');\r\n      return result;\r\n   }\r\n}\r\n\r\nexport default OrderRepository;\r\n"],"names":["OrderRepository","getAllOrder","page","limit","orderBy","filter","filterUndefinedOrNullFields","Order","result","find","sort","createdAt","populate","path","skip","totalItem","count","pagination","Number","totalPage","Math","ceil","createOrder","items","status","totalPrice","note","address","phone","order","create","findById","_id","updateOrder","updatedOrder","findOneAndUpdate","new","OrderStatus","PROCESSING","item","product","Product","updatedQuantity","quantity"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";;;;+BAqFA;;;eAAA;;;qDArFkB;uDACE;6BACQ;+DACY;;;;;;AAGxC,IAAA,AAAMA,kBAAN,MAAMA;IACH,MAAMC,YAAY,EAAEC,IAAI,EAAEC,KAAK,EAAEC,OAAO,EAAE,EAAE;QACzC,MAAMC,SAASC,IAAAA,6BAA2B,EAAC;YAAEF;QAAQ;QAErD,IAAI,CAACF,MAAM;gBACaK,2BAAAA,kBAAAA;YAArB,MAAMC,SAAS,QAAMD,cAAAA,mBAAK,CAACE,IAAI,CAACJ,qBAAXE,mCAAAA,mBAAAA,YAChBG,IAAI,CAAC;gBAAEC,WAAW,CAAC;YAAE,gBADLJ,wCAAAA,4BAAAA,iBAEhBK,QAAQ,CAAC;gBACRC,MAAM;YACT,gBAJkBN,gDAAAA,0BAKhBK,QAAQ,CAAC;gBACRC,MAAM;gBACND,UAAU;oBACPC,MAAM;gBACT;YACH;YACH,OAAO;gBAAEL;YAAO;QACnB;QAEA,MAAMA,SAAS,MAAMD,mBAAK,CAACE,IAAI,CAACJ,QAC5BK,IAAI,CAAC;YAAEC,WAAW,CAAC;QAAE,GACrBC,QAAQ,CAAC;YACPC,MAAM;QACT,GACCD,QAAQ,CAAC;YACPC,MAAM;YACND,UAAU;gBACPC,MAAM;YACT;QACH,GACCC,IAAI,CAAC,AAACZ,CAAAA,OAAO,CAAA,IAAKC,OAClBA,KAAK,CAACA;QAEV,MAAMY,YAAY,MAAMR,mBAAK,CAACS,KAAK,CAACX;QAEpC,OAAO;YACJG;YACAS,YAAY;gBACTf,MAAMgB,OAAOhB;gBACbC,OAAOe,OAAOf;gBACdgB,WAAWC,KAAKC,IAAI,CAACN,YAAYZ;YACpC;QACH;IACH;IAEA,MAAMmB,YAAY,EAAEC,KAAK,EAAEC,MAAM,EAAEC,UAAU,EAAEC,IAAI,EAAEC,OAAO,EAAEC,KAAK,EAAExB,OAAO,EAAE,EAAE;QAC7E,MAAMyB,QAAQ,MAAMtB,mBAAK,CAACuB,MAAM,CAC7BxB,IAAAA,6BAA2B,EAAC;YAAEiB;YAAOC;YAAQC;YAAYC;YAAMC;YAASC;YAAOxB;QAAQ;QAG1F,MAAMI,SAAS,MAAMD,mBAAK,CAACwB,QAAQ,CAACF,MAAMG,GAAG,EAAEpB,QAAQ,CAAC;QAExD,OAAOJ;IACV;IAEA,MAAMyB,YAAY,EAAED,GAAG,EAAER,MAAM,EAAE,EAAE;QAChC,MAAMU,eAAe,MAAM3B,mBAAK,CAAC4B,gBAAgB,CAC9C;YAAEH;QAAI,GACN1B,IAAAA,6BAA2B,EAAC;YAAEkB;QAAO,IACrC;YAAEY,KAAK;QAAK;QAGf,IAAIZ,WAAWa,wBAAW,CAACC,UAAU,EAAE;YACpC,KAAK,MAAMC,QAAQL,aAAaX,KAAK,CAAE;gBACpC,MAAMiB,UAAU,MAAMC,qBAAO,CAACV,QAAQ,CAACQ,KAAKC,OAAO;gBAEnD,IAAIA,SAAS;oBACV,MAAME,kBAAkBF,QAAQG,QAAQ,GAAGJ,KAAKI,QAAQ;oBAExD,MAAMF,qBAAO,CAACN,gBAAgB,CAAC;wBAAEH,KAAKO,KAAKC,OAAO;oBAAC,GAAG;wBAAEG,UAAUD;oBAAgB;gBACrF;YACH;QACH;QAEA,MAAMlC,SAAS,MAAMD,mBAAK,CAACwB,QAAQ,CAACG,aAAaF,GAAG,EAAEpB,QAAQ,CAAC;QAC/D,OAAOJ;IACV;AACH;MAEA,WAAeR"}