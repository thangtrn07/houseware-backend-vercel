{"version":3,"sources":["../../src/controllers/order.controller.ts"],"sourcesContent":["import { Request, Response } from 'express';\r\nimport { Controller, Get, Post, Put } from '~/decorators';\r\nimport { permission } from '~/middlewares/permission';\r\nimport OrderRepository from '~/repositories/order.repository';\r\nimport OkResponse from '~/utils/response/response';\r\n\r\n@Controller('/order')\r\nclass OrderController {\r\n   orderRepo = new OrderRepository();\r\n\r\n   @Get('/')\r\n   async getAllOrder(req: Request, res: Response) {\r\n      const { page, limit = 20, orderBy } = req.query;\r\n      const { result, pagination } = await this.orderRepo.getAllOrder({ page, limit, orderBy });\r\n      return OkResponse(res, {\r\n         metadata: result,\r\n         pagination\r\n      });\r\n   }\r\n\r\n   @Post('/', permission())\r\n   async createOrder(req: Request, res: Response) {\r\n      const { items, status, totalPrice, note, address, phone, orderBy } = req.body;\r\n      const result = await this.orderRepo.createOrder({\r\n         items,\r\n         status,\r\n         totalPrice,\r\n         note,\r\n         address,\r\n         phone,\r\n         orderBy\r\n      });\r\n      return OkResponse(res, { metadata: result });\r\n   }\r\n\r\n   @Put('/', permission())\r\n   async updateOrder(req: Request, res: Response) {\r\n      const { _id, status } = req.body;\r\n      const result = await this.orderRepo.updateOrder({\r\n         _id,\r\n         status\r\n      });\r\n      return OkResponse(res, { metadata: result });\r\n   }\r\n}\r\n\r\nexport default OrderController;\r\n"],"names":["OrderController","getAllOrder","req","res","page","limit","orderBy","query","result","pagination","orderRepo","OkResponse","metadata","createOrder","items","status","totalPrice","note","address","phone","body","updateOrder","_id","OrderRepository","Get","Post","permission","Put","Controller"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";;;;+BA8CA;;;eAAA;;;yBA9CkC;4BACS;4BAChB;0DACC;mDACL;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEvB,IAAA,AACMA,kBADN,MACMA;IAGH,MACMC,YAAYC,GAAY,EAAEC,GAAa,EAAE;QAC5C,MAAM,EAAEC,IAAI,EAAEC,QAAQ,EAAE,EAAEC,OAAO,EAAE,GAAGJ,IAAIK,KAAK;QAC/C,MAAM,EAAEC,MAAM,EAAEC,UAAU,EAAE,GAAG,MAAM,IAAI,CAACC,SAAS,CAACT,WAAW,CAAC;YAAEG;YAAMC;YAAOC;QAAQ;QACvF,OAAOK,IAAAA,iBAAU,EAACR,KAAK;YACpBS,UAAUJ;YACVC;QACH;IACH;IAEA,MACMI,YAAYX,GAAY,EAAEC,GAAa,EAAE;QAC5C,MAAM,EAAEW,KAAK,EAAEC,MAAM,EAAEC,UAAU,EAAEC,IAAI,EAAEC,OAAO,EAAEC,KAAK,EAAEb,OAAO,EAAE,GAAGJ,IAAIkB,IAAI;QAC7E,MAAMZ,SAAS,MAAM,IAAI,CAACE,SAAS,CAACG,WAAW,CAAC;YAC7CC;YACAC;YACAC;YACAC;YACAC;YACAC;YACAb;QACH;QACA,OAAOK,IAAAA,iBAAU,EAACR,KAAK;YAAES,UAAUJ;QAAO;IAC7C;IAEA,MACMa,YAAYnB,GAAY,EAAEC,GAAa,EAAE;QAC5C,MAAM,EAAEmB,GAAG,EAAEP,MAAM,EAAE,GAAGb,IAAIkB,IAAI;QAChC,MAAMZ,SAAS,MAAM,IAAI,CAACE,SAAS,CAACW,WAAW,CAAC;YAC7CC;YACAP;QACH;QACA,OAAOJ,IAAAA,iBAAU,EAACR,KAAK;YAAES,UAAUJ;QAAO;IAC7C;;QAnCAE,uBAAAA,aAAY,IAAIa,wBAAe;;AAoClC;;IAlCIC,IAAAA,eAAG,EAAC;;;eACkB,gBAAO,4BAAP,gBAAO;eAAO,iBAAQ,4BAAR,iBAAQ;;;GAJ1CxB;;IAaFyB,IAAAA,gBAAI,EAAC,KAAKC,IAAAA,sBAAU;;;eACE,gBAAO,4BAAP,gBAAO;eAAO,iBAAQ,4BAAR,iBAAQ;;;GAd1C1B;;IA4BF2B,IAAAA,eAAG,EAAC,KAAKD,IAAAA,sBAAU;;;eACG,gBAAO,4BAAP,gBAAO;eAAO,iBAAQ,4BAAR,iBAAQ;;;GA7B1C1B;AAAAA;IADL4B,IAAAA,sBAAU,EAAC;GACN5B;MAuCN,WAAeA"}