{"version":3,"sources":["../../src/controllers/auth.controller.ts"],"sourcesContent":["import { Request, Response } from 'express';\r\nimport { Controller, Get, Post } from '~/decorators';\r\nimport AuthRepository from '~/repositories/auth.repository';\r\nimport OkResponse from '~/utils/response/response';\r\nimport passport from 'passport';\r\nimport { BadRequestException } from '~/utils/response';\r\nimport { forwardAuthenticated, permission } from '~/middlewares/permission';\r\n\r\n@Controller('/auth')\r\nclass AuthController {\r\n   authRepo = new AuthRepository();\r\n   @Post('/login', forwardAuthenticated, passport.authenticate('local'))\r\n   login(req: Request, res: Response) {\r\n      return OkResponse(res, { message: 'Đăng nhập thành công', metadata: req.user });\r\n   }\r\n\r\n   @Post('/register')\r\n   async register(req: Request, res: Response) {\r\n      const { username, password, fullname, phone, address } = req.body;\r\n      const result = await this.authRepo.register({ username, password, fullname, phone, address });\r\n      return OkResponse(res, { metadata: result });\r\n   }\r\n\r\n   @Post('/change-password', permission())\r\n   async changePassword(req: Request, res: Response) {\r\n      const { username, password } = req.body;\r\n      const result = await this.authRepo.changePassword({ username, password });\r\n      return OkResponse(res, { metadata: result });\r\n   }\r\n\r\n   @Get('/logout', permission())\r\n   async logout(req: Request, res: Response) {\r\n      req.logOut((err) => {\r\n         if (err) {\r\n            throw new BadRequestException(err);\r\n         }\r\n         return OkResponse(res, { message: 'Đã đăng xuất thành công' });\r\n      });\r\n   }\r\n\r\n   @Get('/me')\r\n   async test(req: Request, res: Response) {\r\n      return OkResponse(res, { metadata: req.user || null });\r\n   }\r\n}\r\nexport default AuthController;\r\n"],"names":["AuthController","login","req","res","OkResponse","message","metadata","user","register","username","password","fullname","phone","address","body","result","authRepo","changePassword","logout","logOut","err","BadRequestException","test","AuthRepository","Post","forwardAuthenticated","passport","authenticate","permission","Get","Controller"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";;;;+BA6CA;;;eAAA;;;yBA7CkC;4BACI;yDACX;mDACJ;mDACF;2BACe;4BACa;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEjD,IAAA,AACMA,iBADN,MACMA;IAGHC,MAAMC,GAAY,EAAEC,GAAa,EAAE;QAChC,OAAOC,IAAAA,iBAAU,EAACD,KAAK;YAAEE,SAAS;YAAwBC,UAAUJ,IAAIK,IAAI;QAAC;IAChF;IAEA,MACMC,SAASN,GAAY,EAAEC,GAAa,EAAE;QACzC,MAAM,EAAEM,QAAQ,EAAEC,QAAQ,EAAEC,QAAQ,EAAEC,KAAK,EAAEC,OAAO,EAAE,GAAGX,IAAIY,IAAI;QACjE,MAAMC,SAAS,MAAM,IAAI,CAACC,QAAQ,CAACR,QAAQ,CAAC;YAAEC;YAAUC;YAAUC;YAAUC;YAAOC;QAAQ;QAC3F,OAAOT,IAAAA,iBAAU,EAACD,KAAK;YAAEG,UAAUS;QAAO;IAC7C;IAEA,MACME,eAAef,GAAY,EAAEC,GAAa,EAAE;QAC/C,MAAM,EAAEM,QAAQ,EAAEC,QAAQ,EAAE,GAAGR,IAAIY,IAAI;QACvC,MAAMC,SAAS,MAAM,IAAI,CAACC,QAAQ,CAACC,cAAc,CAAC;YAAER;YAAUC;QAAS;QACvE,OAAON,IAAAA,iBAAU,EAACD,KAAK;YAAEG,UAAUS;QAAO;IAC7C;IAEA,MACMG,OAAOhB,GAAY,EAAEC,GAAa,EAAE;QACvCD,IAAIiB,MAAM,CAAC,CAACC;YACT,IAAIA,KAAK;gBACN,MAAM,IAAIC,8BAAmB,CAACD;YACjC;YACA,OAAOhB,IAAAA,iBAAU,EAACD,KAAK;gBAAEE,SAAS;YAA0B;QAC/D;IACH;IAEA,MACMiB,KAAKpB,GAAY,EAAEC,GAAa,EAAE;QACrC,OAAOC,IAAAA,iBAAU,EAACD,KAAK;YAAEG,UAAUJ,IAAIK,IAAI,IAAI;QAAK;IACvD;;QAjCAS,uBAAAA,YAAW,IAAIO,uBAAc;;AAkChC;;IAjCIC,IAAAA,gBAAI,EAAC,UAAUC,gCAAoB,EAAEC,iBAAQ,CAACC,YAAY,CAAC;;;eACjD,gBAAO,4BAAP,gBAAO;eAAO,iBAAQ,4BAAR,iBAAQ;;;GAH9B3B;;IAOFwB,IAAAA,gBAAI,EAAC;;;eACc,gBAAO,4BAAP,gBAAO;eAAO,iBAAQ,4BAAR,iBAAQ;;;GARvCxB;;IAcFwB,IAAAA,gBAAI,EAAC,oBAAoBI,IAAAA,sBAAU;;;eACV,gBAAO,4BAAP,gBAAO;eAAO,iBAAQ,4BAAR,iBAAQ;;;GAf7C5B;;IAqBF6B,IAAAA,eAAG,EAAC,WAAWD,IAAAA,sBAAU;;;eACR,gBAAO,4BAAP,gBAAO;eAAO,iBAAQ,4BAAR,iBAAQ;;;GAtBrC5B;;IA+BF6B,IAAAA,eAAG,EAAC;;;eACW,gBAAO,4BAAP,gBAAO;eAAO,iBAAQ,4BAAR,iBAAQ;;;GAhCnC7B;AAAAA;IADL8B,IAAAA,sBAAU,EAAC;GACN9B;MAoCN,WAAeA"}