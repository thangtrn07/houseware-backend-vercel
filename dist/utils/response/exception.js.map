{"version":3,"sources":["../../../src/utils/response/exception.ts"],"sourcesContent":["import { ReasonPhrases, StatusCodes } from 'http-status-codes';\r\n\r\nexport class ErrorException extends Error {\r\n   statusCode: StatusCodes;\r\n\r\n   constructor(statusCode: StatusCodes, message: string | string[]) {\r\n      if (typeof message === 'string') {\r\n         super(message);\r\n      } else {\r\n         super((message as string[]).join(', '));\r\n      }\r\n      this.statusCode = statusCode;\r\n   }\r\n}\r\n\r\nexport class NotFoundException extends ErrorException {\r\n   constructor(message: string | string[] = ReasonPhrases.NOT_FOUND) {\r\n      super(StatusCodes.NOT_FOUND, message);\r\n   }\r\n}\r\n\r\nexport class BadRequestException extends ErrorException {\r\n   constructor(message: string | string[] = ReasonPhrases.BAD_REQUEST) {\r\n      super(StatusCodes.BAD_REQUEST, message);\r\n   }\r\n}\r\n\r\nexport class UnprocessableException extends ErrorException {\r\n   constructor(message: string | string[] = ReasonPhrases.UNPROCESSABLE_ENTITY) {\r\n      super(StatusCodes.UNPROCESSABLE_ENTITY, message);\r\n   }\r\n}\r\n\r\nexport class ConflictException extends ErrorException {\r\n   constructor(message: string | string[] = ReasonPhrases.CONFLICT) {\r\n      super(StatusCodes.CONFLICT, message);\r\n   }\r\n}\r\n\r\nexport class UnauthorizedException extends ErrorException {\r\n   constructor(message: string | string[] = ReasonPhrases.UNAUTHORIZED) {\r\n      super(StatusCodes.UNAUTHORIZED, message);\r\n   }\r\n}\r\n\r\nexport class ForbiddenException extends ErrorException {\r\n   constructor(message: string | string[] = ReasonPhrases.FORBIDDEN) {\r\n      super(StatusCodes.FORBIDDEN, message);\r\n   }\r\n}\r\n"],"names":["BadRequestException","ConflictException","ErrorException","ForbiddenException","NotFoundException","UnauthorizedException","UnprocessableException","Error","constructor","statusCode","message","join","ReasonPhrases","NOT_FOUND","StatusCodes","BAD_REQUEST","UNPROCESSABLE_ENTITY","CONFLICT","UNAUTHORIZED","FORBIDDEN"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";;;;;;;;;;;IAqBaA,mBAAmB;eAAnBA;;IAYAC,iBAAiB;eAAjBA;;IA/BAC,cAAc;eAAdA;;IA2CAC,kBAAkB;eAAlBA;;IA9BAC,iBAAiB;eAAjBA;;IAwBAC,qBAAqB;eAArBA;;IAZAC,sBAAsB;eAAtBA;;;iCA3B8B;;;;;;;;;;;;;;AAEpC,IAAA,AAAMJ,iBAAN,MAAMA,uBAAuBK;IAGjCC,YAAYC,UAAuB,EAAEC,OAA0B,CAAE;QAC9D,IAAI,OAAOA,YAAY,UAAU;YAC9B,KAAK,CAACA;YAJZD,uBAAAA,cAAAA,KAAAA;QAKG,OAAO;YACJ,KAAK,CAAC,AAACC,QAAqBC,IAAI,CAAC;YANvCF,uBAAAA,cAAAA,KAAAA;QAOG;QACA,IAAI,CAACA,UAAU,GAAGA;IACrB;AACH;AAEO,IAAA,AAAML,oBAAN,MAAMA,0BAA0BF;IACpCM,YAAYE,UAA6BE,8BAAa,CAACC,SAAS,CAAE;QAC/D,KAAK,CAACC,4BAAW,CAACD,SAAS,EAAEH;IAChC;AACH;AAEO,IAAA,AAAMV,sBAAN,MAAMA,4BAA4BE;IACtCM,YAAYE,UAA6BE,8BAAa,CAACG,WAAW,CAAE;QACjE,KAAK,CAACD,4BAAW,CAACC,WAAW,EAAEL;IAClC;AACH;AAEO,IAAA,AAAMJ,yBAAN,MAAMA,+BAA+BJ;IACzCM,YAAYE,UAA6BE,8BAAa,CAACI,oBAAoB,CAAE;QAC1E,KAAK,CAACF,4BAAW,CAACE,oBAAoB,EAAEN;IAC3C;AACH;AAEO,IAAA,AAAMT,oBAAN,MAAMA,0BAA0BC;IACpCM,YAAYE,UAA6BE,8BAAa,CAACK,QAAQ,CAAE;QAC9D,KAAK,CAACH,4BAAW,CAACG,QAAQ,EAAEP;IAC/B;AACH;AAEO,IAAA,AAAML,wBAAN,MAAMA,8BAA8BH;IACxCM,YAAYE,UAA6BE,8BAAa,CAACM,YAAY,CAAE;QAClE,KAAK,CAACJ,4BAAW,CAACI,YAAY,EAAER;IACnC;AACH;AAEO,IAAA,AAAMP,qBAAN,MAAMA,2BAA2BD;IACrCM,YAAYE,UAA6BE,8BAAa,CAACO,SAAS,CAAE;QAC/D,KAAK,CAACL,4BAAW,CAACK,SAAS,EAAET;IAChC;AACH"}